# Generated by Django 4.2.7 on 2025-05-14 19:57

from django.db import migrations, models
import uuid

def update_appointment_ids(apps, schema_editor):
    """Update appointment IDs to UUID values"""
    Appointment = apps.get_model('main_app', 'Appointment')
    db_alias = schema_editor.connection.alias
    
    # Get all appointments
    appointments = Appointment.objects.using(db_alias).all()
    
    # Update IDs with UUIDs
    for appointment in appointments:
        appointment.id = uuid.uuid4()
        # Add default values for NOT NULL fields to prevent errors
        if appointment.address_line1 is None:
            appointment.address_line1 = ''
        if appointment.address_line2 is None:
            appointment.address_line2 = ''
        if appointment.city is None:
            appointment.city = ''
        if appointment.state is None:
            appointment.state = ''
        if appointment.zip_code is None:
            appointment.zip_code = ''
        if appointment.postal_code is None:
            appointment.postal_code = ''
        if appointment.country is None:
            appointment.country = 'United States'
        appointment.save()

class Migration(migrations.Migration):

    dependencies = [
        ('main_app', '0006_appointment_address_line1_appointment_address_line2_and_more'),
    ]

    operations = [
        # First make address fields nullable to avoid constraints
        migrations.RunSQL(
            sql="""
            ALTER TABLE main_app_appointment 
            ALTER COLUMN address_line1 DROP NOT NULL,
            ALTER COLUMN address_line2 DROP NOT NULL,
            ALTER COLUMN city DROP NOT NULL,
            ALTER COLUMN state DROP NOT NULL,
            ALTER COLUMN postal_code DROP NOT NULL,
            ALTER COLUMN zip_code DROP NOT NULL,
            ALTER COLUMN country DROP NOT NULL;
            """,
            reverse_sql="""
            ALTER TABLE main_app_appointment 
            ALTER COLUMN address_line1 SET NOT NULL,
            ALTER COLUMN address_line2 SET NOT NULL,
            ALTER COLUMN city SET NOT NULL,
            ALTER COLUMN state SET NOT NULL,
            ALTER COLUMN postal_code SET NOT NULL,
            ALTER COLUMN zip_code SET NOT NULL,
            ALTER COLUMN country SET NOT NULL;
            """
        ),
        
        # Then alter ID field to allow UUIDs
        migrations.RunSQL(
            sql="""
            ALTER TABLE main_app_appointment 
            ALTER COLUMN id TYPE uuid USING (uuid_generate_v4());
            """,
            reverse_sql="""
            ALTER TABLE main_app_appointment 
            ALTER COLUMN id TYPE integer;
            """
        ),
        
        # Populate with UUIDs
        migrations.RunPython(update_appointment_ids),
    ]
