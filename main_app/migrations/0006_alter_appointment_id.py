# Generated by Django 5.2.1 on 2025-05-14 14:22

import uuid
from django.db import migrations, models
import django.db.models.deletion
from django.conf import settings


class Migration(migrations.Migration):

    dependencies = [
        ('main_app', '0005_geo_location_fields'),
    ]

    operations = [
        # First create the UUID extension
        migrations.RunSQL(
            # Create extension if it doesn't exist (needed for uuid functions)
            sql="CREATE EXTENSION IF NOT EXISTS \"uuid-ossp\";",
            reverse_sql=""
        ),
        # Then create the new model
        migrations.CreateModel(
            name='AppointmentNew',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('start_time', models.DateTimeField()),
                ('end_time', models.DateTimeField()),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('confirmed', 'Confirmed'), ('cancelled', 'Cancelled'), ('completed', 'Completed')], default='pending', max_length=10)),
                ('notes', models.TextField(blank=True)),
                ('address_line1', models.CharField(blank=True, max_length=255)),
                ('address_line2', models.CharField(blank=True, max_length=255)),
                ('city', models.CharField(blank=True, max_length=100)),
                ('state', models.CharField(blank=True, max_length=100)),
                ('postal_code', models.CharField(blank=True, max_length=20)),
                ('country', models.CharField(blank=True, default='United States', max_length=100)),
                ('latitude', models.FloatField(blank=True, null=True)),
                ('longitude', models.FloatField(blank=True, null=True)),
                ('original_price', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('discount_amount', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('final_price', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('discount_reason', models.CharField(blank=True, max_length=255)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('consumer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='appointments_new', to=settings.AUTH_USER_MODEL)),
                ('service', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='appointments_new', to='main_app.service')),
            ],
        ),
        # Since this is a fresh database, we don't need to transfer data
        # But uncomment this if needed in the future
        # migrations.RunSQL(
        #     sql="INSERT INTO main_app_appointmentnew (id, start_time, end_time, status, notes, address_line1, address_line2, city, state, postal_code, country, latitude, longitude, original_price, discount_amount, final_price, discount_reason, created_at, updated_at, consumer_id, service_id) SELECT uuid_generate_v4(), start_time, end_time, status, notes, address_line1, address_line2, city, state, postal_code, country, latitude, longitude, original_price, discount_amount, final_price, discount_reason, created_at, updated_at, consumer_id, service_id FROM main_app_appointment;",
        #     reverse_sql="DELETE FROM main_app_appointmentnew;"
        # ),
        # Delete the old model
        migrations.DeleteModel(
            name='Appointment',
        ),
        # Rename the new model
        migrations.RenameModel(
            old_name='AppointmentNew',
            new_name='Appointment',
        ),
        # Fix the relationship fields
        migrations.AlterField(
            model_name='appointment',
            name='consumer',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='appointments', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterField(
            model_name='appointment',
            name='service',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='appointments', to='main_app.service'),
        ),
    ] 