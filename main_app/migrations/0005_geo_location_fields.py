# Generated by Django 5.2.1 on 2025-05-14 14:21

import django.contrib.gis.db.models.fields
import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('main_app', '0004_provideravailability'),
    ]

    operations = [
        migrations.AddField(
            model_name='appointment',
            name='address_line1',
            field=models.CharField(blank=True, max_length=255),
        ),
        migrations.AddField(
            model_name='appointment',
            name='address_line2',
            field=models.CharField(blank=True, max_length=255),
        ),
        migrations.AddField(
            model_name='appointment',
            name='city',
            field=models.CharField(blank=True, max_length=100),
        ),
        migrations.AddField(
            model_name='appointment',
            name='country',
            field=models.CharField(blank=True, default='United States', max_length=100),
        ),
        migrations.AddField(
            model_name='appointment',
            name='discount_amount',
            field=models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True),
        ),
        migrations.AddField(
            model_name='appointment',
            name='discount_reason',
            field=models.CharField(blank=True, max_length=255),
        ),
        migrations.AddField(
            model_name='appointment',
            name='final_price',
            field=models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True),
        ),
        migrations.AddField(
            model_name='appointment',
            name='latitude',
            field=models.FloatField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='appointment',
            name='location',
            field=django.contrib.gis.db.models.fields.PointField(blank=True, geography=True, null=True, srid=4326),
        ),
        migrations.AddField(
            model_name='appointment',
            name='longitude',
            field=models.FloatField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='appointment',
            name='original_price',
            field=models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True),
        ),
        migrations.AddField(
            model_name='appointment',
            name='postal_code',
            field=models.CharField(blank=True, max_length=20),
        ),
        migrations.AddField(
            model_name='appointment',
            name='state',
            field=models.CharField(blank=True, max_length=100),
        ),
        migrations.AddField(
            model_name='serviceprovider',
            name='address_line1',
            field=models.CharField(blank=True, max_length=255),
        ),
        migrations.AddField(
            model_name='serviceprovider',
            name='address_line2',
            field=models.CharField(blank=True, max_length=255),
        ),
        migrations.AddField(
            model_name='serviceprovider',
            name='city',
            field=models.CharField(blank=True, max_length=100),
        ),
        migrations.AddField(
            model_name='serviceprovider',
            name='country',
            field=models.CharField(blank=True, default='United States', max_length=100),
        ),
        migrations.AddField(
            model_name='serviceprovider',
            name='latitude',
            field=models.FloatField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='serviceprovider',
            name='location',
            field=django.contrib.gis.db.models.fields.PointField(blank=True, geography=True, null=True, srid=4326),
        ),
        migrations.AddField(
            model_name='serviceprovider',
            name='longitude',
            field=models.FloatField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='serviceprovider',
            name='postal_code',
            field=models.CharField(blank=True, max_length=20),
        ),
        migrations.AddField(
            model_name='serviceprovider',
            name='service_radius',
            field=models.FloatField(default=25.0, help_text='Maximum service radius in miles', validators=[django.core.validators.MinValueValidator(0.1), django.core.validators.MaxValueValidator(100.0)]),
        ),
        migrations.AddField(
            model_name='serviceprovider',
            name='state',
            field=models.CharField(blank=True, max_length=100),
        ),
        migrations.AddField(
            model_name='user',
            name='latitude',
            field=models.FloatField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='user',
            name='location',
            field=django.contrib.gis.db.models.fields.PointField(blank=True, geography=True, null=True, srid=4326),
        ),
        migrations.AddField(
            model_name='user',
            name='longitude',
            field=models.FloatField(blank=True, null=True),
        ),
        migrations.CreateModel(
            name='ProximityDiscountTier',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tier', models.PositiveSmallIntegerField(choices=[(1, 'Tier 1'), (2, 'Tier 2'), (3, 'Tier 3'), (4, 'Tier 4')])),
                ('min_distance', models.FloatField(help_text='Minimum distance in yards (0 for starting distance)', validators=[django.core.validators.MinValueValidator(0.0)])),
                ('max_distance', models.FloatField(help_text='Maximum distance in yards/miles', validators=[django.core.validators.MinValueValidator(0.1)])),
                ('distance_unit', models.CharField(choices=[('yards', 'Yards'), ('miles', 'Miles')], default='yards', max_length=10)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('provider', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='discount_tiers', to='main_app.serviceprovider')),
            ],
            options={
                'ordering': ['provider', 'tier'],
                'unique_together': {('provider', 'tier')},
            },
        ),
        migrations.CreateModel(
            name='ProximityDiscount',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('appointment_count', models.PositiveSmallIntegerField(help_text='Number of appointments (1-5)')),
                ('discount_percentage', models.DecimalField(decimal_places=2, help_text='Discount percentage (0-100%)', max_digits=5, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('tier', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='discounts', to='main_app.proximitydiscounttier')),
            ],
            options={
                'ordering': ['tier', 'appointment_count'],
                'unique_together': {('tier', 'appointment_count')},
            },
        ),
    ] 